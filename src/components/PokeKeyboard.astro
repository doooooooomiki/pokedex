---
import Button from "./Button.astro";

---

<poke-keyboard>
  <div class="row">
    <Button key="q" type="key" />
    <Button key="w" type="key" />
    <Button key="e" type="key" />
    <Button key="r" type="key" />
    <Button key="t" type="key" />
    <Button key="z" type="key" />
    <Button key="u" type="key" />
    <Button key="i" type="key" />
    <Button key="o" type="key" />
    <Button key="p" type="key" />
  </div>
  <div class="row">
    <div class="spacer small"></div>
    <Button key="a" type="key" />
    <Button key="s" type="key" />
    <Button key="d" type="key" />
    <Button key="f" type="key" />
    <Button key="g" type="key" />
    <Button key="h" type="key" />
    <Button key="j" type="key" />
    <Button key="k" type="key" />
    <Button key="l" type="key" />
    <div class="spacer small"></div>
  </div>
  <div class="row">
    <Button key="↵" type="submit" class="big" />
    <Button key="y" type="key" />
    <Button key="x" type="key" />
    <Button key="c" type="key" />
    <Button key="v" type="key" />
    <Button key="b" type="key" />
    <Button key="n" type="key" />
    <Button key="m" type="key" />
    <Button key="←" type="delete" class="big" />
  </div>

</poke-keyboard>

<script>
  class PokeKeyboard extends HTMLElement {
    constructor() {
      super();
      this._typingSounds = [
        new Audio('/typing-sound-1.mp3'),
        new Audio('/typing-sound-2.mp3'),
      ];
    }

    get buttons() {
      return this.querySelectorAll('button');
    }

    get typingSounds() {
      return this._typingSounds;
    }

    onPointerLeave(e) {
      e.currentTarget.classList.remove('is-down');
    }

    onPointerUp(e) {
      e.currentTarget.classList.toggle('is-down');
    }

    onPointerDown(e) {
      if ('vibrate' in navigator) navigator.vibrate(42);
      const sound = this._typingSounds[Math.floor(Math.random() * this._typingSounds.length)];
      sound.play();
      console.log(sound);

      e.currentTarget.classList.toggle('is-down');
      const type = e.currentTarget.dataset.type;
      const key = e.currentTarget.dataset.key;
      this.dispatchEvent(new CustomEvent(`poke${type}down`, {
        detail: { key },
        bubbles: true,
      }));
    }

    connectedCallback() {
      this.buttons.forEach((button) => {
        button.addEventListener('pointerdown', this.onPointerDown.bind(this));
        button.addEventListener('pointerup', this.onPointerUp.bind(this));
        button.addEventListener('pointerleave', this.onPointerLeave.bind(this));
      });
    }
  }
  customElements.define("poke-keyboard", PokeKeyboard);
</script>